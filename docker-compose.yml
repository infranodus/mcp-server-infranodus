version: '3.8'

services:
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: infranodus-mcp-server
    ports:
      - "3000:3000"  # HTTP/SSE port
    environment:
      - NODE_ENV=production
      - HTTP_HOST=0.0.0.0
      - HTTP_PORT=3000
      - INFRANODUS_API_KEY=${INFRANODUS_API_KEY}
      - INFRANODUS_API_URL=${INFRANODUS_API_URL:-https://api.infranodus.com}
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - mcp-network
    volumes:
      - ./logs:/app/logs  # Optional: for logging
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mcp.rule=Host(`mcp.yourdomain.com`)"
      - "traefik.http.services.mcp.loadbalancer.server.port=3000"
      - "traefik.http.routers.mcp.tls.certresolver=letsencrypt"

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: infranodus-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For SSL certificates
    depends_on:
      - mcp-server
    networks:
      - mcp-network
    restart: unless-stopped

  # Optional: Redis for caching and session management
  redis:
    image: redis:alpine
    container_name: infranodus-redis
    ports:
      - "6379:6379"
    networks:
      - mcp-network
    restart: unless-stopped
    volumes:
      - redis-data:/data

networks:
  mcp-network:
    driver: bridge

volumes:
  redis-data: